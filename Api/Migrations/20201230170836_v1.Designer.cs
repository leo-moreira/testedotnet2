// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteDotnet.Data;

namespace TesteDotnet.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201230170836_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Api.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "CPF");

                    b.ToTable("Developer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "12345678900",
                            Email = "abc@gmail.com",
                            Name = "Leonardo",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "12345678901",
                            Email = "abc1@gmail.com",
                            Name = "Maria",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "12345678902",
                            Email = "abc2@gmail.com",
                            Name = "José",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("Api.Models.DeveloperProject", b =>
                {
                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("DeveloperCPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("DeveloperId1")
                        .HasColumnType("int");

                    b.HasKey("DeveloperId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("DeveloperId1", "DeveloperCPF");

                    b.ToTable("DeveloperProject");

                    b.HasData(
                        new
                        {
                            DeveloperId = 1,
                            ProjectId = 1
                        },
                        new
                        {
                            DeveloperId = 2,
                            ProjectId = 2
                        });
                });

            modelBuilder.Entity("Api.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DeveloperCPF")
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int?>("DeveloperId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("DeveloperId1", "DeveloperCPF");

                    b.ToTable("Entry");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeveloperId = 1,
                            EndDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InitialDate = new DateTime(2020, 12, 30, 14, 8, 34, 990, DateTimeKind.Local).AddTicks(6175),
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeveloperId = 2,
                            EndDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InitialDate = new DateTime(2020, 12, 30, 14, 8, 35, 2, DateTimeKind.Local).AddTicks(7430),
                            ProjectId = 2
                        });
                });

            modelBuilder.Entity("Api.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Web App"
                        },
                        new
                        {
                            Id = 2,
                            Name = "API"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Database"
                        });
                });

            modelBuilder.Entity("Api.Models.DeveloperProject", b =>
                {
                    b.HasOne("Api.Models.Project", "Project")
                        .WithMany("DeveloperProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Developer", "Developer")
                        .WithMany("DeveloperProject")
                        .HasForeignKey("DeveloperId1", "DeveloperCPF");

                    b.Navigation("Developer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Api.Models.Entry", b =>
                {
                    b.HasOne("Api.Models.Project", "Project")
                        .WithMany("Entries")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Developer", "Developer")
                        .WithMany("Entries")
                        .HasForeignKey("DeveloperId1", "DeveloperCPF");

                    b.Navigation("Developer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Api.Models.Developer", b =>
                {
                    b.Navigation("DeveloperProject");

                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Api.Models.Project", b =>
                {
                    b.Navigation("DeveloperProject");

                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
